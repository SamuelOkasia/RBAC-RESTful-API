name: CI/CD Pipeline for Cloud Run

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set up Docker services (Postgres, Redis)
        run: docker-compose -f docker-compose.test.yml up --build --abort-on-container-exit

      - name: Run Tests
        run: docker-compose -f docker-compose.test.yml run web pytest

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_KEY }}

      - name: Authenticate Docker with Google Cloud
        run: gcloud auth configure-docker

      - name: Build and Push Docker Image
        run: |
          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/your-app-name .
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/your-app-name

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy your-app-name \
            --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/your-app-name \
            --platform managed \
            --region us-central1 \
            --allow-unauthenticated \
            --add-cloudsql-instances ${{ secrets.GCP_SQL_CONNECTION_NAME }} \
            --set-env-vars DATABASE_URL="postgresql://flaskuser:flaskpassword@/flaskdb?host=/cloudsql/${{ secrets.GCP_SQL_CONNECTION_NAME }}" \
            --set-env-vars REDIS_HOST=${{ secrets.REDIS_HOST }},REDIS_PORT=${{ secrets.REDIS_PORT }}
